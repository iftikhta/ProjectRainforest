@{
    ViewData["Title"] = "Products";
    Layout = "_Layout";
}
<h1>Product List</h1>
<div class="card-deck justify-content-between" style="padding: 20px;">
    @foreach (Product prod in (List<Product>)ViewBag.items)
    {
        <div class="card" style="max-width: 18rem; min-width: 18rem; margin-bottom:20px" margin: auto; text-align: center" >
            <img class="card-img-top" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22286%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20286%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1762a903aad%20text%20%7B%20fill%3Argba(255%2C255%2C255%2C.75)%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1762a903aad%22%3E%3Crect%20width%3D%22286%22%20height%3D%22180%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22107.1953125%22%20y%3D%2296.3%22%3E286x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" alt="Card image cap">
            <div class="card-body">
                <h5 class="card-title" value="">@prod.ProductName.ToString()</h5>
                @foreach (ProductInfo prodInfo in (List<ProductInfo>)ViewBag.details)
                {
                    @if (prodInfo.ProductId == prod.ProductId)
                    {
                            <p>Description: @prodInfo.ProductDescription</p>
                            <p>Price: @prodInfo.ProductPrice</p>
                            <p class="btn btn-outline-dark" style="color: white;" name="productId">
                                @Html.ActionLink("ViewProduct", "ViewProduct", new { productId = prod.ProductId })
                            </p>

                    }
                }
            </div>
        </div>
    }
</div>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


